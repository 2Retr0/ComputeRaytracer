find_package(Vulkan REQUIRED)

add_library(vkbootstrap STATIC)
add_library(glm INTERFACE)
add_library(vma INTERFACE)

add_library(stb_image INTERFACE)

add_library(tinyobjloader STATIC)

target_sources(vkbootstrap PRIVATE 
    vkbootstrap/VkBootstrap.h
    vkbootstrap/VkBootstrap.cpp
)

target_include_directories(vkbootstrap PUBLIC vkbootstrap)
target_link_libraries(vkbootstrap PUBLIC Vulkan::Vulkan $<$<BOOL:UNIX>:${CMAKE_DL_LIBS}>)

# Both vma and glm and header only libs so we only need the include path
target_include_directories(vma INTERFACE vma)
target_include_directories(glm INTERFACE glm)

target_sources(tinyobjloader PRIVATE 
    tinyobjloader/tiny_obj_loader.h
    tinyobjloader/tiny_obj_loader.cc
)

target_include_directories(tinyobjloader PUBLIC tinyobjloader)


add_library(sdl2 INTERFACE)
set(PATH_SDL2 "SDL_PATH" CACHE PATH "Path to SDL2")

if (APPLE)
    set(PATH_SDL2 $ENV{HOMEBREW_PREFIX})
endif()

if (WIN32)
    target_include_directories(sdl2 INTERFACE ${PATH_SDL2}/include ${PATH_SDL2_IMAGE}/include)
    target_link_directories(sdl2 INTERFACE ${PATH_SDL2}/lib/x64 ${PATH_SDL2_IMAGE}/lib/x64)
elseif (UNIX)
    target_include_directories(sdl2 INTERFACE ${PATH_SDL2}/include/SDL2 ${PATH_SDL2_IMAGE}/include/SDL2)
    target_link_directories(sdl2 INTERFACE ${PATH_SDL2}/lib ${PATH_SDL2_IMAGE}/lib)
endif()

target_link_libraries(sdl2 INTERFACE SDL2 SDL2main)

add_library(imgui STATIC)

target_include_directories(imgui PUBLIC imgui)

target_sources(imgui PRIVATE 
    imgui/imgui.h
    imgui/imgui.cpp

    imgui/imgui_demo.cpp
    imgui/imgui_draw.cpp
    imgui/imgui_widgets.cpp

    imgui/imgui_impl_vulkan.cpp
    imgui/imgui_impl_sdl2.cpp
)

target_link_libraries(imgui PUBLIC Vulkan::Vulkan sdl2)

target_include_directories(stb_image INTERFACE stb_image)
